@model MyProjectMVC.Models.ViewModels.Teamwithplayer

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" />
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => Model.Teams)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Teams) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TeamName)
 
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.TeamID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.TeamID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.TeamID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@*@if(Model.Players != null)
{
    <h3>Players in the selected Team</h3>
    <table class="table">
        <tr>
            <th></th>
            <th>Player</th>
        </tr>
        @foreach(Player p in Model.Players)
        {
            string selectedRow = "";
            if(p.Team.TeamID == (int?)ViewData["TeamID"])
            {
                selectedRow = "success";
            }
            <tr class="@selectedRow">
                <td>
                    @Html.ActionLink("Select","Index", new {playerID = Model.Players })
                </td>
            </tr>
        }
    </table>
}*@
